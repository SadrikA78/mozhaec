# Generated by Django 2.2.12 on 2020-04-08 18:32

import datetime
import django.contrib.gis.db.models.fields
import django.core.files.storage
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Страна')),
                ('img', models.FileField(storage=django.core.files.storage.FileSystemStorage(location='/home/artem/real/proj/polls/static/media'), upload_to='', verbose_name='Флаг')),
            ],
            options={
                'verbose_name_plural': 'Страны',
                'verbose_name': 'Страна',
            },
        ),
        migrations.CreateModel(
            name='Decoder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Наименование приемника')),
                ('modulation', models.CharField(choices=[('AM', 'АМ'), ('QM', 'ЧМ'), ('FM', 'ФМ')], max_length=128, verbose_name='Вид модуляции')),
                ('power_input', models.FloatField(default=80, verbose_name='Мощность выходного сигнала')),
                ('sensity', models.FloatField(default=80, verbose_name='Чувствительность')),
                ('regime', models.CharField(choices=[('1', 'активный'), ('0', 'пассивный')], max_length=128, verbose_name='Режим работы')),
                ('KPD', models.FloatField(default=80, verbose_name='Коэффициент полезного действия')),
                ('num_cannal', models.IntegerField(default=80, verbose_name='Количество каналов')),
            ],
            options={
                'verbose_name_plural': 'Передатчики',
                'verbose_name': 'Передатчик',
            },
        ),
        migrations.CreateModel(
            name='Encoder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Наименование приемника')),
                ('modulation', models.CharField(choices=[('AM', 'АМ'), ('QM', 'ЧМ'), ('FM', 'ФМ')], max_length=128, verbose_name='Вид модуляции')),
                ('sensity', models.FloatField(default=80, verbose_name='Чувствительность')),
                ('noize', models.FloatField(default=80, verbose_name='Коэффициент шума')),
            ],
            options={
                'verbose_name_plural': 'Приемники',
                'verbose_name': 'Приемник',
            },
        ),
        migrations.CreateModel(
            name='Satellite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Наименование КА')),
                ('logo', models.FileField(default='settings.MEDIA_ROOT/anonymous.png', storage=django.core.files.storage.FileSystemStorage(location='/home/artem/real/proj/polls/static/media'), upload_to='', verbose_name='Изображение')),
                ('SCN', models.CharField(default=0, max_length=128, verbose_name='Номер по спутниковому каталогу')),
                ('NSSDC_ID', models.CharField(default=0, max_length=128, verbose_name='Номер полета')),
                ('date_launch', models.DateField(default=datetime.date.today, verbose_name='Дата запуска')),
                ('type', models.CharField(choices=[('USE', 'в эксплуатации'), ('LITTER', 'выведен из системы'), ('LEAVE', 'потерян из-за аварии'), ('TEST', 'на проверке'), ('READY', 'готовы к запуску'), ('PLAN', 'план')], max_length=128, verbose_name='Тип КА')),
                ('al_orbit', models.IntegerField(default=0, verbose_name='Высота орбиты, км')),
                ('nac_orbit', models.FloatField(default=0, verbose_name='Наклонение, °')),
                ('period_orbit', models.IntegerField(default=0, verbose_name='Период обращения, мин')),
                ('zone_orbit', models.IntegerField(default=0, verbose_name='Диаметр зоны покрытия одного спутника, км')),
                ('TLE', models.FileField(default='settings.PRIVATE_STORAGE_ROOT/0.txt', storage=django.core.files.storage.FileSystemStorage(location='/home/artem/real/proj/polls/static/files'), upload_to='', verbose_name='Файл TLE')),
            ],
            options={
                'verbose_name_plural': 'Спутники',
                'verbose_name': 'Спутник',
            },
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Наименование ЗС')),
                ('type', models.CharField(choices=[('A', 'Тип А'), ('B', 'Тип Б')], max_length=128, verbose_name='Тип ЗС')),
            ],
            options={
                'verbose_name_plural': 'Земные станции',
                'verbose_name': 'Земная станция',
            },
        ),
        migrations.CreateModel(
            name='SSC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Наименование системы')),
                ('satellites_communication', models.ManyToManyField(blank=True, related_name='ka_communication', to='polls.Satellite')),
                ('satellites_transfer', models.ManyToManyField(blank=True, related_name='ka_transfer', to='polls.Satellite')),
                ('stations', models.ManyToManyField(blank=True, to='polls.Station', verbose_name='Наземный сегмент')),
            ],
            options={
                'verbose_name_plural': 'Системы спутниковой связи и ретрянсляции',
                'verbose_name': 'Система спутниковой связи и ретрянсляции',
            },
        ),
        migrations.CreateModel(
            name='SpaceAgency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Космическое агенство')),
                ('acronym', models.CharField(max_length=128, verbose_name='Сокращенное название')),
                ('logo', models.FileField(default='settings.MEDIA_ROOT/anonymous.png', storage=django.core.files.storage.FileSystemStorage(location='/home/artem/real/proj/polls/static/media'), upload_to='', verbose_name='Логотип')),
                ('type', models.CharField(choices=[('GOV', 'государственная организация'), ('CIV', 'частная корпорация')], default='GOV', max_length=128, verbose_name='Тип')),
                ('data_foundation', models.DateField(default=datetime.date.today, verbose_name='Дата основания')),
                ('CEO', models.CharField(default='', max_length=128, verbose_name='Генеральный директор')),
                ('launch_capable', models.BooleanField(default=True)),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='agency', to='polls.Country', verbose_name='Страна происхождения')),
            ],
            options={
                'verbose_name_plural': 'Космические агенства',
                'verbose_name': 'Космическое агенство',
            },
        ),
        migrations.CreateModel(
            name='SatSystem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Полное название системы')),
                ('alternative_name', models.CharField(default='', max_length=128, verbose_name='Сокращенное название системы')),
                ('logo', models.FileField(default='settings.MEDIA_ROOT/anonymous.png', storage=django.core.files.storage.FileSystemStorage(location='/home/artem/real/proj/polls/static/media'), upload_to='', verbose_name='Изображение')),
                ('status', models.CharField(choices=[('ACTIVE', 'в эксплуатации'), ('PASSIVE', 'не используется')], max_length=128, verbose_name='Статус')),
                ('usage', models.CharField(choices=[('MIL', 'военное'), ('CIV', 'гражданское'), ('DUABLE', 'двойное')], max_length=128, verbose_name='Применение')),
                ('coverage', models.CharField(choices=[('GLOB', 'глобальное'), ('REGION', 'региональное')], max_length=128, verbose_name='Покрытие')),
                ('plan_num_sat', models.IntegerField(default=0, verbose_name='Количество требуемых спутников')),
                ('num_sat', models.IntegerField(default=0, verbose_name='На орбите')),
                ('first_launch', models.DateField(verbose_name='Первый запуск')),
                ('orbit', models.CharField(choices=[('LEO', 'низкая'), ('AV_CIRC', 'средневысокая круговая')], max_length=128, verbose_name='Орбита')),
                ('altitude', models.IntegerField(default=0, verbose_name='Высота')),
                ('agency', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sat_system', to='polls.SpaceAgency', verbose_name='Оператор')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sat_system', to='polls.Country', verbose_name='Страна происхождения')),
            ],
            options={
                'verbose_name_plural': 'Спутниковые системы',
                'verbose_name': 'Спутниковая система',
            },
        ),
        migrations.AddField(
            model_name='satellite',
            name='agency',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sat', to='polls.SpaceAgency'),
        ),
        migrations.AddField(
            model_name='satellite',
            name='country',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sat', to='polls.Country'),
        ),
        migrations.AddField(
            model_name='satellite',
            name='sat_system',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sat', to='polls.SatSystem'),
        ),
        migrations.CreateModel(
            name='Redioline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('velocity', models.FloatField(default=80, verbose_name='Скорость')),
                ('noize_stable', models.FloatField(default=80, verbose_name='Помехоустойчивость')),
                ('satellite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='polls.Satellite')),
                ('station', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='polls.Station')),
            ],
            options={
                'verbose_name_plural': 'Радиолинии',
                'verbose_name': 'Радиолиния',
            },
        ),
        migrations.CreateModel(
            name='NKU',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=128, verbose_name='Тип')),
                ('location', models.CharField(max_length=128, verbose_name='Местоположение')),
                ('map_location', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('agency', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='nku', to='polls.SpaceAgency')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='nku', to='polls.Country')),
                ('sat_system', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='nku', to='polls.SatSystem')),
            ],
            options={
                'verbose_name_plural': 'НКУ',
                'verbose_name': 'Пункт управления',
            },
        ),
        migrations.CreateModel(
            name='MKS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Наименование МКС')),
                ('satellites', models.ManyToManyField(blank=True, to='polls.Satellite', verbose_name='Космический сегмент')),
                ('stations', models.ManyToManyField(blank=True, to='polls.Station', verbose_name='Наземный сегмент')),
            ],
            options={
                'verbose_name_plural': 'Многофункциональные космические системы',
                'verbose_name': 'Многофункциональная космическая система',
            },
        ),
        migrations.CreateModel(
            name='Encoder_antenna',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Наименование антенны')),
                ('type', models.CharField(choices=[('0', '0000')], max_length=128, verbose_name='Тип антенной системы')),
                ('diametr', models.FloatField(default=80, verbose_name='Диаметр антенны')),
                ('lenth_vawe', models.FloatField(default=80, verbose_name='Длина волны')),
                ('num_vibro', models.IntegerField(default=80, verbose_name='Количество вибраторов')),
                ('wave_num', models.FloatField(default=80, verbose_name='Волновое число')),
                ('radius', models.FloatField(default=80, verbose_name='Радиус раскрытия')),
                ('focus', models.FloatField(default=80, verbose_name='Фокусное расстояние')),
                ('k_radius', models.FloatField(default=80, verbose_name='Коэффициент вытянутости')),
                ('angle_os', models.FloatField(default=80, verbose_name='Угол отклонения луча от оси')),
                ('KPD', models.FloatField(default=80, verbose_name='Коэффициент полезного действия')),
                ('k_retire', models.FloatField(default=80, verbose_name='Коэффициент потерь')),
                ('k_power', models.FloatField(default=80, verbose_name='Коэффициент усиления антенны')),
                ('encoder', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='polls.Encoder')),
            ],
            options={
                'verbose_name_plural': 'Антены приемника',
                'verbose_name': 'Антена приемника',
            },
        ),
        migrations.AddField(
            model_name='encoder',
            name='station',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='polls.Station'),
        ),
        migrations.CreateModel(
            name='Decoder_antenna',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Наименование антенны')),
                ('type', models.CharField(choices=[('0', '0000')], max_length=128, verbose_name='Тип антенной системы')),
                ('lenth_a', models.FloatField(default=80, verbose_name='Длина антенны')),
                ('width_a', models.FloatField(default=80, verbose_name='Ширина антенны')),
                ('lenth_vawe', models.FloatField(default=80, verbose_name='Длина волны')),
                ('lenth_arm', models.FloatField(default=80, verbose_name='Длина плеча')),
                ('num_sign_az', models.IntegerField(default=80, verbose_name='Количество излучателей в аз. плоскости')),
                ('num_sign_ang', models.IntegerField(default=80, verbose_name='Количество излучателей в угл. плоскости')),
                ('lenth_sign_az', models.IntegerField(default=80, verbose_name='Расстояние между излучателями в аз. плоскости')),
                ('lenth_sign_ang', models.IntegerField(default=80, verbose_name='Расстояние между излучателями в угл. плоскости')),
                ('angle_os', models.FloatField(default=80, verbose_name='Угол отклонения луча от оси')),
                ('k_retire', models.FloatField(default=80, verbose_name='Коэффициент потерь')),
                ('k_power', models.FloatField(default=80, verbose_name='Коэффициент усиления антенны')),
                ('encoder', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='polls.Decoder')),
            ],
            options={
                'verbose_name_plural': 'Антены передатчика',
                'verbose_name': 'Антена передатчика',
            },
        ),
        migrations.AddField(
            model_name='decoder',
            name='satellite',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='decoder', to='polls.Satellite'),
        ),
        migrations.AddField(
            model_name='decoder',
            name='station',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='decoder', to='polls.Station'),
        ),
    ]
